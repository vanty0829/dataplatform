FROM quay.io/jupyter/pyspark-notebook:spark-3.5.0

USER root
# ENV PYSPARK_SUBMIT_ARGS '--packages com.amazonaws:aws-java-sdk:1.12.262,org.apache.hadoop:hadoop-aws:3.3.4,net.java.dev.jets3t:jets3t:0.9.4 pyspark-shell'


# install lib to connect postgresql
RUN sudo apt -y update \
    && sudo apt -y install postgresql postgresql-contrib \
    && sudo apt-get install -y libpq-dev


COPY requirements.txt ./
RUN pip install --upgrade pip \
    && pip install --no-cache-dir -r requirements.txt \
    && apt-get clean && rm requirements.txt
    
WORKDIR /

ENV PATH="/usr/local/spark/sbin:/usr/local/spark/bin:${PATH}"
ENV SPARK_HOME="/usr/local/spark"

ENV PYSPARK_PYTHON=/usr/bin/python3.11
ENV PYSPARK_DRIVER_PYTHON=/usr/bin/python3.11 

COPY ./spark-config/spark-defaults.conf /usr/local/spark/conf/
COPY ./spark-config/hive-site.xml /usr/local/spark/conf/

# COPY ./jars/* /usr/local/spark/jars/

RUN    wget -P /usr/local/spark/jars/ https://repo1.maven.org/maven2/io/delta/delta-core_2.12/2.4.0/delta-core_2.12-2.4.0.jar \
    && wget -P /usr/local/spark/jars/ https://repo1.maven.org/maven2/io/delta/delta-storage/3.2.0/delta-storage-3.2.0.jar \
    && wget -P /usr/local/spark/jars/ https://repo1.maven.org/maven2/io/delta/delta-spark_2.12/3.2.0/delta-spark_2.12-3.2.0.jar \    
    && wget -P /usr/local/spark/jars/ https://repo1.maven.org/maven2/net/java/dev/jets3t/jets3t/0.9.4/jets3t-0.9.4.jar \
    && wget -P /usr/local/spark/jars/ https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-aws/3.3.4/hadoop-aws-3.3.4.jar \
    && wget -P /usr/local/spark/jars/ https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-client/3.3.4/hadoop-client-3.3.4.jar \
    && wget -P /usr/local/spark/jars/ https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-common/3.3.4/hadoop-common-3.3.4.jar \
    && wget -P /usr/local/spark/jars/ https://repo1.maven.org/maven2/com/amazonaws/aws-java-sdk-bundle/1.12.262/aws-java-sdk-bundle-1.12.262.jar \
    && wget -P /usr/local/spark/jars/ https://repo1.maven.org/maven2/org/postgresql/postgresql/42.7.0/postgresql-42.7.0.jar

# CMD ["start-notebook.sh", "--NotebookApp.token=${NB_PW}", "--NotebookApp.password=${NB_PW}"]

CMD sh -c "start-notebook.sh --NotebookApp.token=${NB_PW} --NotebookApp.password=${NB_PW}"

# -p create if not exist
RUN mkdir -p /home/${NB_USER} \
    && chmod -R 777 /home/${NB_USER}
    
WORKDIR /home/${NB_USER}
# USER $NB_UID
# USER $NB_USER